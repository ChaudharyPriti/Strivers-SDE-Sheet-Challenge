#include<stack>
 int largestRectangle(vector < int > & heights) {
   int n = heights.size();
   vector<int>width(n),left,right;
   stack<pair<int,int>>s,p;
  for(int i=0;i<n;++i){
    while(!s.empty() && s.top().first>=heights[i])
        s.pop();
    if(s.empty())
      left.push_back(-1);
    else
      left.push_back(s.top().second);
    s.push({heights[i],i});
  }
  for(int i=n-1;i>=0;--i){
    while(!p.empty() && p.top().first>=heights[i])
        p.pop();
    if(p.empty())
      right.push_back(n);
    else
      right.push_back(p.top().second);
    p.push({heights[i],i});
  }
  reverse(right.begin(),right.end());
  for(int i=0;i<n;++i){
    width[i] = right[i]-left[i]-1;
  }
  for(int i=0;i<n;++i){
    width[i]*=heights[i];
  }
  
  int maxArea = width[0];
  
  for(int i=1;i<n;++i){
    if(width[i]>maxArea)
      maxArea = width[i];
  }
  return maxArea;
 }
