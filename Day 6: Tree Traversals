void inOrder(BinaryTreeNode<int> *root, vector<int> &ans){
    if(root==NULL)
        return;
    inOrder(root->left,ans);
    ans.push_back(root->data);
    inOrder(root->right,ans);
}
void preOrder(BinaryTreeNode<int> *root, vector<int> &ans){
    if(root==NULL)
        return;
    ans.push_back(root->data);
    preOrder(root->left,ans);
    preOrder(root->right,ans);
}
void postOrder(BinaryTreeNode<int> *root, vector<int> &ans){
    if(root==NULL)
        return;
    postOrder(root->left,ans);
    postOrder(root->right,ans);
    ans.push_back(root->data);
}
vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    vector<vector<int>> v;
    vector<int>ans1,ans2,ans3;
    inOrder(root,ans1);
    v.push_back(ans1);
    preOrder(root,ans2);
    v.push_back(ans2);
    postOrder(root,ans3);
    v.push_back(ans3);
    return v;
}
